{
  "name": "Health Buddy MVP Fixed",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "line-webhook",
        "responseMode": "responseNode",
        "options": {}
      },
      "id": "a1b2c3d4-e5f6-7890-abcd-ef1234567890",
      "name": "LINE Webhook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1.1,
      "position": [250, 300],
      "webhookId": "line-webhook"
    },
    {
      "parameters": {
        "jsCode": "// Parse LINE events\nconst events = $input.item.json.body.events || [];\n\nif (events.length === 0) {\n  return [{json: {status: 'ok', message: 'No events'}}];\n}\n\nconst event = events[0];\nconst output = {\n  eventType: event.type,\n  userId: event.source?.userId,\n  replyToken: event.replyToken,\n  message: event.message,\n  messageType: event.message?.type || 'text',\n  text: event.message?.text || '',\n  messageId: event.message?.id || '',\n  timestamp: new Date().toISOString()\n};\n\n// Detect intent\nif (output.messageType === 'image') {\n  output.intent = 'IMAGE';\n} else if (output.text) {\n  if (output.text.match(/‡∏ó‡∏≤‡∏ô‡∏¢‡∏≤‡πÅ‡∏•‡πâ‡∏ß|‡∏ó‡∏≤‡∏ô‡πÅ‡∏•‡πâ‡∏ß|‡∏Å‡∏¥‡∏ô‡∏¢‡∏≤‡πÅ‡∏•‡πâ‡∏ß/i)) {\n    output.intent = 'MEDICATION';\n  } else if (output.text.match(/‡∏Ñ‡∏ß‡∏≤‡∏°‡∏î‡∏±‡∏ô|‡∏ß‡∏±‡∏î‡∏Ñ‡∏ß‡∏≤‡∏°‡∏î‡∏±‡∏ô|bp|BP|\\d{2,3}\\/\\d{2,3}/i)) {\n    output.intent = 'VITALS';\n  } else if (output.text.match(/‡∏ä‡πà‡∏ß‡∏¢|‡∏â‡∏∏‡∏Å‡πÄ‡∏â‡∏¥‡∏ô|‡πÄ‡∏à‡πá‡∏ö|‡∏´‡∏≤‡∏¢‡πÉ‡∏à‡πÑ‡∏°‡πà‡∏≠‡∏≠‡∏Å/i)) {\n    output.intent = 'EMERGENCY';\n  } else {\n    output.intent = 'CHAT';\n  }\n}\n\nreturn [output];"
      },
      "id": "b2c3d4e5-f6a7-8901-bcde-f23456789012",
      "name": "Parse Event",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [450, 300]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": false,
            "leftValue": "",
            "typeValidation": "loose"
          },
          "conditions": [
            {
              "id": "cond1",
              "leftValue": "={{ $json.intent }}",
              "rightValue": "MEDICATION",
              "operator": {
                "type": "string",
                "operation": "equals",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "c3d4e5f6-a7b8-9012-cdef-345678901234",
      "name": "If Medication",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [650, 200]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": false,
            "leftValue": "",
            "typeValidation": "loose"
          },
          "conditions": [
            {
              "id": "cond2",
              "leftValue": "={{ $json.intent }}",
              "rightValue": "VITALS",
              "operator": {
                "type": "string",
                "operation": "equals",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "d4e5f6a7-b8c9-0123-defa-456789012345",
      "name": "If Vitals",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [650, 300]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": false,
            "leftValue": "",
            "typeValidation": "loose"
          },
          "conditions": [
            {
              "id": "cond3",
              "leftValue": "={{ $json.intent }}",
              "rightValue": "EMERGENCY",
              "operator": {
                "type": "string",
                "operation": "equals",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "e5f6a7b8-c9d0-1234-efab-567890123456",
      "name": "If Emergency",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [650, 400]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": false,
            "leftValue": "",
            "typeValidation": "loose"
          },
          "conditions": [
            {
              "id": "cond4",
              "leftValue": "={{ $json.intent }}",
              "rightValue": "IMAGE",
              "operator": {
                "type": "string",
                "operation": "equals",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "f6a7b8c9-d0e1-2345-fabc-678901234567",
      "name": "If Image",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [650, 500]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": false,
            "leftValue": "",
            "typeValidation": "loose"
          },
          "conditions": [
            {
              "id": "cond5",
              "leftValue": "={{ $json.intent }}",
              "rightValue": "CHAT",
              "operator": {
                "type": "string",
                "operation": "equals",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "a7b8c9d0-e1f2-3456-abcd-789012345678",
      "name": "If Chat",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [650, 600]
    },
    {
      "parameters": {
        "jsCode": "// Handle medication logging\nconst messages = [\n  {\n    type: 'text',\n    text: '‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡∏ó‡∏≤‡∏ô‡∏¢‡∏≤‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡∏Ñ‡πà‡∏∞\\n‡πÄ‡∏Å‡πà‡∏á‡∏°‡∏≤‡∏Å‡∏ó‡∏µ‡πà‡∏ó‡∏≤‡∏ô‡∏¢‡∏≤‡∏ï‡∏£‡∏á‡πÄ‡∏ß‡∏•‡∏≤! üíä',\n    quickReply: {\n      items: [\n        {\n          type: 'action',\n          action: {\n            type: 'message',\n            label: 'üìä ‡∏î‡∏π‡∏™‡∏£‡∏∏‡∏õ‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ',\n            text: '‡∏Ç‡∏≠‡∏î‡∏π‡∏™‡∏£‡∏∏‡∏õ‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ'\n          }\n        },\n        {\n          type: 'action',\n          action: {\n            type: 'message',\n            label: 'ü©∫ ‡∏ß‡∏±‡∏î‡∏Ñ‡∏ß‡∏≤‡∏°‡∏î‡∏±‡∏ô',\n            text: '‡∏à‡∏∞‡∏ß‡∏±‡∏î‡∏Ñ‡∏ß‡∏≤‡∏°‡∏î‡∏±‡∏ô'\n          }\n        }\n      ]\n    }\n  }\n];\n\nreturn {\n  json: {\n    replyToken: $('Parse Event').item.json.replyToken,\n    messages: messages\n  }\n};"
      },
      "id": "b8c9d0e1-f2a3-4567-bcde-890123456789",
      "name": "Medication Reply",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [850, 200]
    },
    {
      "parameters": {
        "jsCode": "// Handle vitals\nconst text = $('Parse Event').item.json.text;\nconst bpMatch = text.match(/(\\d{2,3})\\/(\\d{2,3})/);\nlet responseText = '';\n\nif (bpMatch) {\n  const sys = parseInt(bpMatch[1]);\n  const dia = parseInt(bpMatch[2]);\n  \n  if (sys > 140 || dia > 90) {\n    responseText = `üìä ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ñ‡∏ß‡∏≤‡∏°‡∏î‡∏±‡∏ô ${sys}/${dia} ‡πÅ‡∏•‡πâ‡∏ß‡∏Ñ‡πà‡∏∞\\n‚ö†Ô∏è ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏î‡∏±‡∏ô‡∏Ñ‡πà‡∏≠‡∏ô‡∏Ç‡πâ‡∏≤‡∏á‡∏™‡∏π‡∏á ‡∏Ñ‡∏ß‡∏£‡∏û‡∏±‡∏Å‡∏ú‡πà‡∏≠‡∏ô‡πÅ‡∏•‡∏∞‡∏ß‡∏±‡∏î‡πÉ‡∏´‡∏°‡πà‡πÉ‡∏ô‡∏≠‡∏µ‡∏Å 30 ‡∏ô‡∏≤‡∏ó‡∏µ`;\n  } else {\n    responseText = `üìä ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ñ‡∏ß‡∏≤‡∏°‡∏î‡∏±‡∏ô ${sys}/${dia} ‡πÅ‡∏•‡πâ‡∏ß‡∏Ñ‡πà‡∏∞\\n‚úÖ ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏î‡∏±‡∏ô‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡πÄ‡∏Å‡∏ì‡∏ë‡πå‡∏õ‡∏Å‡∏ï‡∏¥ ‡∏î‡∏µ‡∏°‡∏≤‡∏Å‡∏Ñ‡πà‡∏∞!`;\n  }\n} else {\n  responseText = '‡∏Ç‡∏≠‡πÇ‡∏ó‡∏©‡∏Ñ‡πà‡∏∞ ‡πÑ‡∏°‡πà‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà‡πÅ‡∏à‡πâ‡∏á‡∏°‡∏≤\\n‡∏•‡∏≠‡∏á‡∏û‡∏¥‡∏°‡∏û‡πå‡πÉ‡∏´‡∏°‡πà ‡πÄ‡∏ä‡πà‡∏ô \"‡∏Ñ‡∏ß‡∏≤‡∏°‡∏î‡∏±‡∏ô 120/80\" ‡∏Ñ‡πà‡∏∞';\n}\n\nreturn {\n  json: {\n    replyToken: $('Parse Event').item.json.replyToken,\n    messages: [{\n      type: 'text',\n      text: responseText\n    }]\n  }\n};"
      },
      "id": "c9d0e1f2-a3b4-5678-cdef-901234567890",
      "name": "Vitals Reply",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [850, 300]
    },
    {
      "parameters": {
        "jsCode": "// Emergency handler\nconst messages = [\n  {\n    type: 'text',\n    text: 'üö® ‡πÑ‡∏î‡πâ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏â‡∏∏‡∏Å‡πÄ‡∏â‡∏¥‡∏ô‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏≠‡∏ö‡∏Ñ‡∏£‡∏±‡∏ß‡πÅ‡∏•‡πâ‡∏ß‡∏Ñ‡πà‡∏∞\\n\\n‡∏à‡∏∞‡∏°‡∏µ‡∏Ñ‡∏ô‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏Å‡∏•‡∏±‡∏ö‡πÄ‡∏£‡πá‡∏ß‡πÜ ‡∏ô‡∏µ‡πâ\\n\\n‡∏´‡∏≤‡∏Å‡∏â‡∏∏‡∏Å‡πÄ‡∏â‡∏¥‡∏ô‡∏°‡∏≤‡∏Å ‡πÇ‡∏ó‡∏£ 1669 ‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏¢‡∏Ñ‡πà‡∏∞'\n  }\n];\n\nreturn {\n  json: {\n    replyToken: $('Parse Event').item.json.replyToken,\n    messages: messages\n  }\n};"
      },
      "id": "d0e1f2a3-b4c5-6789-defa-012345678901",
      "name": "Emergency Reply",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [850, 400]
    },
    {
      "parameters": {
        "method": "GET",
        "url": "=https://api-data.line.me/v2/bot/message/{{ $('Parse Event').item.json.messageId }}/content",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "responseFormat": "file",
        "options": {}
      },
      "id": "e1f2a3b4-c5d6-7890-efab-123456789012",
      "name": "Get Image",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [850, 500],
      "credentials": {
        "httpHeaderAuth": {
          "id": "LINE_API_ID",
          "name": "LINE API"
        }
      }
    },
    {
      "parameters": {
        "resource": "chatCompletion",
        "model": "gpt-4-vision-preview",
        "messages": {
          "values": [
            {
              "role": "system",
              "content": "‡∏Ñ‡∏∏‡∏ì‡∏Ñ‡∏∑‡∏≠ '‡∏û‡∏•‡∏≠‡∏¢' ‡∏û‡∏¢‡∏≤‡∏ö‡∏≤‡∏•‡∏ú‡∏π‡πâ‡∏ä‡πà‡∏ß‡∏¢‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏Ñ‡πà‡∏≤‡∏Ñ‡∏ß‡∏≤‡∏°‡∏î‡∏±‡∏ô‡πÇ‡∏•‡∏´‡∏¥‡∏ï\n\n‡∏≠‡πà‡∏≤‡∏ô‡∏Ñ‡πà‡∏≤‡∏Ñ‡∏ß‡∏≤‡∏°‡∏î‡∏±‡∏ô‡∏à‡∏≤‡∏Å‡∏£‡∏π‡∏õ‡πÅ‡∏•‡∏∞‡∏ï‡∏≠‡∏ö‡πÉ‡∏ô‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö:\nüìä ‡∏Ñ‡πà‡∏≤‡∏Ñ‡∏ß‡∏≤‡∏°‡∏î‡∏±‡∏ô: [SYS/DIA]\nüìà ‡∏£‡∏∞‡∏î‡∏±‡∏ö: [‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ô]\nüí° ‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥: [‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏™‡∏±‡πâ‡∏ô‡πÜ]"
            },
            {
              "role": "user",
              "content": [
                {
                  "type": "text",
                  "text": "‡∏ä‡πà‡∏ß‡∏¢‡∏≠‡πà‡∏≤‡∏ô‡∏Ñ‡πà‡∏≤‡∏Ñ‡∏ß‡∏≤‡∏°‡∏î‡∏±‡∏ô‡∏à‡∏≤‡∏Å‡∏£‡∏π‡∏õ‡∏ô‡∏µ‡πâ"
                },
                {
                  "type": "image_url",
                  "image_url": {
                    "url": "data:image/jpeg;base64,{{ $binary.data.data }}"
                  }
                }
              ]
            }
          ]
        },
        "options": {
          "maxTokens": 200,
          "temperature": 0.3
        }
      },
      "id": "f2a3b4c5-d6e7-8901-fabc-234567890123",
      "name": "Analyze Image",
      "type": "n8n-nodes-base.openAi",
      "typeVersion": 1,
      "position": [1050, 500],
      "credentials": {
        "openAiApi": {
          "id": "OPENAI_ID",
          "name": "OpenAI"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Format image analysis response\nconst analysis = $json.choices[0].message.content;\n\nreturn {\n  json: {\n    replyToken: $('Parse Event').item.json.replyToken,\n    messages: [{\n      type: 'text',\n      text: analysis\n    }]\n  }\n};"
      },
      "id": "a3b4c5d6-e7f8-9012-abcd-345678901234",
      "name": "Format Image Reply",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [1250, 500]
    },
    {
      "parameters": {
        "resource": "chatCompletion",
        "model": "gpt-3.5-turbo",
        "messages": {
          "values": [
            {
              "role": "system",
              "content": "‡∏Ñ‡∏∏‡∏ì‡∏Ñ‡∏∑‡∏≠ '‡∏û‡∏•‡∏≠‡∏¢' ‡∏û‡∏¢‡∏≤‡∏ö‡∏≤‡∏•‡∏´‡∏ç‡∏¥‡∏á‡∏ß‡∏±‡∏¢ 30 ‡∏õ‡∏µ ‡∏ú‡∏π‡πâ‡∏ä‡πà‡∏ß‡∏¢‡∏î‡∏π‡πÅ‡∏•‡∏™‡∏∏‡∏Ç‡∏†‡∏≤‡∏û‡∏ú‡∏π‡πâ‡∏™‡∏π‡∏á‡∏≠‡∏≤‡∏¢‡∏∏\n\n‡∏ö‡∏∏‡∏Ñ‡∏•‡∏¥‡∏Å:\n- ‡πÉ‡∏à‡∏î‡∏µ ‡∏≠‡πà‡∏≠‡∏ô‡πÇ‡∏¢‡∏ô ‡πÄ‡∏õ‡πá‡∏ô‡∏Å‡∏±‡∏ô‡πÄ‡∏≠‡∏á\n- ‡∏û‡∏π‡∏î‡∏à‡∏≤‡∏™‡∏∏‡∏†‡∏≤‡∏û ‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏•‡∏á‡∏ó‡πâ‡∏≤‡∏¢ '‡∏Ñ‡πà‡∏∞' ‡πÄ‡∏™‡∏°‡∏≠\n- ‡πÉ‡∏´‡πâ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÉ‡∏à ‡∏´‡πà‡∏ß‡∏á‡πÉ‡∏¢\n\n‡∏ï‡∏≠‡∏ö‡∏™‡∏±‡πâ‡∏ô‡πÜ 2-3 ‡∏õ‡∏£‡∏∞‡πÇ‡∏¢‡∏Ñ"
            },
            {
              "role": "user",
              "content": "={{ $('Parse Event').item.json.text }}"
            }
          ]
        },
        "options": {
          "temperature": 0.7,
          "maxTokens": 150
        }
      },
      "id": "b4c5d6e7-f8a9-0123-bcde-456789012345",
      "name": "AI Chat",
      "type": "n8n-nodes-base.openAi",
      "typeVersion": 1,
      "position": [850, 600],
      "credentials": {
        "openAiApi": {
          "id": "OPENAI_ID",
          "name": "OpenAI"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Format AI chat response\nconst aiResponse = $json.choices[0].message.content;\n\nreturn {\n  json: {\n    replyToken: $('Parse Event').item.json.replyToken,\n    messages: [{\n      type: 'text',\n      text: aiResponse,\n      quickReply: {\n        items: [\n          {\n            type: 'action',\n            action: {\n              type: 'message',\n              label: 'üíä ‡∏ó‡∏≤‡∏ô‡∏¢‡∏≤‡πÅ‡∏•‡πâ‡∏ß',\n              text: '‡∏ó‡∏≤‡∏ô‡∏¢‡∏≤‡πÅ‡∏•‡πâ‡∏ß'\n            }\n          },\n          {\n            type: 'action',\n            action: {\n              type: 'message',\n              label: 'ü©∫ ‡∏ß‡∏±‡∏î‡∏Ñ‡∏ß‡∏≤‡∏°‡∏î‡∏±‡∏ô',\n              text: '‡∏à‡∏∞‡∏ß‡∏±‡∏î‡∏Ñ‡∏ß‡∏≤‡∏°‡∏î‡∏±‡∏ô'\n            }\n          }\n        ]\n      }\n    }]\n  }\n};"
      },
      "id": "c5d6e7f8-a9b0-1234-cdef-567890123456",
      "name": "Format Chat Reply",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [1050, 600]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.line.me/v2/bot/message/reply",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ JSON.stringify($json) }}",
        "options": {}
      },
      "id": "d6e7f8a9-b0c1-2345-defa-678901234567",
      "name": "LINE Reply",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [1450, 400],
      "credentials": {
        "httpHeaderAuth": {
          "id": "LINE_API_ID",
          "name": "LINE API"
        }
      }
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={{ { \"status\": \"ok\" } }}",
        "options": {}
      },
      "id": "e7f8a9b0-c1d2-3456-efab-789012345678",
      "name": "Respond Webhook",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [1650, 400]
    }
  ],
  "connections": {
    "LINE Webhook": {
      "main": [
        [
          {
            "node": "Parse Event",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Parse Event": {
      "main": [
        [
          {
            "node": "If Medication",
            "type": "main",
            "index": 0
          },
          {
            "node": "If Vitals",
            "type": "main",
            "index": 0
          },
          {
            "node": "If Emergency",
            "type": "main",
            "index": 0
          },
          {
            "node": "If Image",
            "type": "main",
            "index": 0
          },
          {
            "node": "If Chat",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If Medication": {
      "main": [
        [
          {
            "node": "Medication Reply",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If Vitals": {
      "main": [
        [
          {
            "node": "Vitals Reply",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If Emergency": {
      "main": [
        [
          {
            "node": "Emergency Reply",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If Image": {
      "main": [
        [
          {
            "node": "Get Image",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If Chat": {
      "main": [
        [
          {
            "node": "AI Chat",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Image": {
      "main": [
        [
          {
            "node": "Analyze Image",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Analyze Image": {
      "main": [
        [
          {
            "node": "Format Image Reply",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Chat": {
      "main": [
        [
          {
            "node": "Format Chat Reply",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Medication Reply": {
      "main": [
        [
          {
            "node": "LINE Reply",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Vitals Reply": {
      "main": [
        [
          {
            "node": "LINE Reply",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Emergency Reply": {
      "main": [
        [
          {
            "node": "LINE Reply",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Format Image Reply": {
      "main": [
        [
          {
            "node": "LINE Reply",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Format Chat Reply": {
      "main": [
        [
          {
            "node": "LINE Reply",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "LINE Reply": {
      "main": [
        [
          {
            "node": "Respond Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [],
  "triggerCount": 1,
  "versionId": "a1b2c3d4-e5f6-7890-abcd-ef1234567890",
  "meta": {
    "templateId": "health-buddy-mvp-v1"
  }
}